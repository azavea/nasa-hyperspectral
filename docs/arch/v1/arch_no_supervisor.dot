digraph G {
    # nodesep = 1
    # ranksep = 0.5

    stac_api

    activation_msg -> stream_activator

    stream_activator -> activator

    activator -> stac_api [style = dashed, dir = both]

    activator -> preprocessed_input

    activator -> product_msg

    product_msg -> stream_products
    
    stream_products -> processor

    processor -> stac_api [style = dashed, dir = both]

    processor -> product

    processor -> product_result_msg

    product_result_msg -> result_stream

    stac_api [shape = box3d, label = "STAC API"]
    activation_msg [shape = note, label = "Activation message"]
    stream_activator [shape = cds, label = "Activator stream", width = 2]
    activator [shape = box3d, label = "Activator"]
    preprocessed_input [shape = folder, label = "Preprocessed input"]
    product_msg [shape = note, label = "Product message"]
    stream_products [shape = cds, label = "Products stream", width = 2]
    processor [shape = box3d, label = "Processor"]
    product [shape = folder, label = "Product"]
    product_result_msg [shape = note, label = "Product result msg"]
    result_stream [shape = cds, label = "Result stream"]

    subgraph cluster_persistence {
        style=filled;
		color=lightgrey;
		node [style=filled,color=white];
        stac_api;
    }

    subgraph cluster_activator {
		style=filled;
		color=lightgrey;
		node [style=filled,color=white];
        activation_msg;
        stream_activator;
        activator;
        preprocessed_input;
        product_msg;
		label = "Activator module";
	}

    subgraph cluster_processor {
		style=filled;
		color=lightgrey;
		node [style=filled,color=white];
        product_msg;
        stream_products;
        processor;
        product_result_msg;
        product;
		label = "Processor module";
	}
}

