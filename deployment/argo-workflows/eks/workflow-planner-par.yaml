apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: workflow-
spec:
  entrypoint: workflow-template
  parallelism: 2
  arguments:
    parameters:
    - name: planner-input
      value: |
        [{
          "geometry": {
            "type": "Polygon",
            "coordinates": [
              [
                [
                  -114.887217,
                  33.498289
                ],
                [
                  -114.819923,
                  33.66972
                ],
                [
                  -116.769931,
                  34.187606
                ],
                [
                  -116.833779,
                  34.015078
                ],
                [
                  -114.887217,
                  33.498289
                ]
              ]
            ]
          },
          "datetime": "1993-10-12T00:00:00Z/2021-10-14T00:00:00Z",
          "wavelengths": {
            "min": 0.36,
            "max": 0.46
          },
          "collection": "aviris-classic", 
          "stacApiUri": "https://franklin.nasa-hsi.azavea.com"
        }]
  templates:
  - name: workflow-template
    dag:
      tasks:
      - name: planner
        template: planner-template
        arguments:
          parameters:
            - name: planner-input
              value: "{{item}}"
        withParam: "{{workflow.parameters.planner-input}}"

      - name: planner-output-transform
        dependencies: [planner]
        template: planner-output-transform-template
        arguments:
          parameters:
            - name: planner-output
              value: "{{tasks.planner.outputs.parameters.planner-output}}"

      - name: activators-seq
        dependencies: [planner-output-transform]
        template: activator
        arguments:
          parameters:
          - name: planner-output
            # https://stackoverflow.com/questions/70987499/unable-to-use-jsonpath-function-for-output-parameter-in-argo-workflows 
            # value: "{{=jsonpath(tasks.['planner'].outputs.parameters.planner-output, $.scene_ids)}}"
            # value: {{=jsonpath(tasks.planner.outputs.parameters.planner-output, $.scene_ids)}}
            # value: "{{tasks.planner.outputs.parameters.planner-output}}"
            value: "{{tasks.planner-output-transform.outputs.parameters.planner-output-list}}"

  - name: activator
    inputs:
      parameters:
      - name: planner-output
    steps:
    - - name: activator-step
        template: activator-template
        arguments:
          parameters:
          - name: activator-input
            value: "{{item}}"
        withParam: "{{inputs.parameters.planner-output}}"

  - name: planner-template
    inputs:
      parameters:
      - name: planner-input
    container:
      image: 513167130603.dkr.ecr.us-east-1.amazonaws.com/activator:4d1176b
      imagePullPolicy: Always # IfNotPresent
      command: [python, -m, activator.planner.main, --pipeline]
      args: ["{{inputs.parameters.planner-input}}"]
      # https://argoproj.github.io/argo-workflows/resource-duration/
      resources:
        requests:
          cpu: 500m
          memory: 512M 
        limits:
          cpu: 500m
          memory: 512M
    outputs:
      parameters:
      - name: planner-output
        valueFrom:
          path: /tmp/planner-output.json

  - name: activator-template
    inputs:
      parameters:
      - name: activator-input
    container:
      image: 513167130603.dkr.ecr.us-east-1.amazonaws.com/activator:4d1176b
      imagePullPolicy: Always # IfNotPresent
      env:
      - name: STAC_API_URI
        value: "https://franklin.nasa-hsi.azavea.com"
      - name: GDAL_CACHEMAX
        value: "30%"
      - name: GDAL_OUTPUT_FORMAT
        value: "GTiff"
      command: [python, -m, activator.aviris.main, --l1, --aviris-stac-id]
      args: ["{{inputs.parameters.activator-input}}"]
      # https://argoproj.github.io/argo-workflows/resource-duration/
      resources:
        requests:
          cpu: 3000m
          memory: 8G 
        limits:
          cpu: 3200m
          memory: 12G 
    outputs:
      parameters:
      - name: activator-output
        valueFrom:
          path: /tmp/activator-output.json

  # manual extra JSON transformation step
  - name: planner-output-transform-template
    inputs:
      parameters:
      - name: planner-output
    script:
      image: stedolan/jq
      command: [bash]
      source: |
        echo {{inputs.parameters.planner-output}} | jq .[0].scene_ids > /tmp/planner-output-list.json
    outputs:
      parameters:
        - name: planner-output-list
          valueFrom:
            path: /tmp/planner-output-list.json

  # Can't be used, see: https://github.com/argoproj/argo-workflows/issues/8432
  # - name: planner-output-transform-template
  #   inputs:
  #     parameters:
  #     - name: planner-output
  #   data:
  #     transformation:
  #       - expression: "{{=jsonpath(inputs.parameters.planner-output), '$.[0].scene_ids')}}"
  #   outputs:
  #     parameters:
  #       - name: planner-output-list
  #         valueFrom:
  #           path: /tmp/planner-output-list.json
